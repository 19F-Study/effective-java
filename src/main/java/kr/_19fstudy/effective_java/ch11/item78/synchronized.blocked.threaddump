두개의 쓰레드가 동시에 get 메서드에 걸치는 순간을 잘 골라야 BLOCK 된 결과를 볼 수 있다.
하나라도 루프를 돌고있으면 둘다 RUNNING 상태일 수 있다.

Full thread dump Java HotSpot(TM) 64-Bit Server VM (11.0.2+9-LTS mixed mode):

Threads class SMR info:
_java_thread_list=0x00007f9a275034a0, length=13, elements={
0x00007f9a2b03c000, 0x00007f9a298d9000, 0x00007f9a2b800800, 0x00007f9a28800000,
0x00007f9a2a800800, 0x00007f9a2a006800, 0x00007f9a298dd800, 0x00007f9a2b11f800,
0x00007f9a28835800, 0x00007f9a2997f000, 0x00007f9a29980000, 0x00007f9a2b801800,
0x00007f9a2800f800
}

"Reference Handler" #2 daemon prio=10 os_prio=31 cpu=0.43ms elapsed=63.10s tid=0x00007f9a2b03c000 nid=0x3803 waiting on condition  [0x0000700003a35000]
   java.lang.Thread.State: RUNNABLE
        at java.lang.ref.Reference.waitForReferencePendingList(java.base@11.0.2/Native Method)
        at java.lang.ref.Reference.processPendingReferences(java.base@11.0.2/Reference.java:241)
        at java.lang.ref.Reference$ReferenceHandler.run(java.base@11.0.2/Reference.java:213)

"Finalizer" #3 daemon prio=8 os_prio=31 cpu=0.62ms elapsed=63.10s tid=0x00007f9a298d9000 nid=0x4a03 in Object.wait()  [0x0000700003b38000]
   java.lang.Thread.State: WAITING (on object monitor)
        at java.lang.Object.wait(java.base@11.0.2/Native Method)
        - waiting on <0x000000070ff08f80> (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(java.base@11.0.2/ReferenceQueue.java:155)
        - waiting to re-lock in wait() <0x000000070ff08f80> (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(java.base@11.0.2/ReferenceQueue.java:176)
        at java.lang.ref.Finalizer$FinalizerThread.run(java.base@11.0.2/Finalizer.java:170)

"Signal Dispatcher" #4 daemon prio=9 os_prio=31 cpu=0.38ms elapsed=63.08s tid=0x00007f9a2b800800 nid=0x4703 runnable  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"C2 CompilerThread0" #5 daemon prio=9 os_prio=31 cpu=46.12ms elapsed=63.08s tid=0x00007f9a28800000 nid=0x4403 waiting on condition  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE
   No compile task

"C1 CompilerThread0" #8 daemon prio=9 os_prio=31 cpu=47.47ms elapsed=63.08s tid=0x00007f9a2a800800 nid=0x4203 waiting on condition  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE
   No compile task

"Sweeper thread" #9 daemon prio=9 os_prio=31 cpu=1.65ms elapsed=63.08s tid=0x00007f9a2a006800 nid=0x5603 runnable  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"Common-Cleaner" #10 daemon prio=8 os_prio=31 cpu=0.25ms elapsed=63.03s tid=0x00007f9a298dd800 nid=0xa803 in Object.wait()  [0x0000700004047000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
        at java.lang.Object.wait(java.base@11.0.2/Native Method)
        - waiting on <0x000000070fe043d0> (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(java.base@11.0.2/ReferenceQueue.java:155)
        - waiting to re-lock in wait() <0x000000070fe043d0> (a java.lang.ref.ReferenceQueue$Lock)
        at jdk.internal.ref.CleanerImpl.run(java.base@11.0.2/CleanerImpl.java:148)
        at java.lang.Thread.run(java.base@11.0.2/Thread.java:834)
        at jdk.internal.misc.InnocuousThread.run(java.base@11.0.2/InnocuousThread.java:134)

"Monitor Ctrl-Break" #11 daemon prio=5 os_prio=31 cpu=22.24ms elapsed=62.96s tid=0x00007f9a2b11f800 nid=0xa303 runnable  [0x000070000424d000]
   java.lang.Thread.State: RUNNABLE
        at java.net.SocketInputStream.socketRead0(java.base@11.0.2/Native Method)
        at java.net.SocketInputStream.socketRead(java.base@11.0.2/SocketInputStream.java:115)
        at java.net.SocketInputStream.read(java.base@11.0.2/SocketInputStream.java:168)
        at java.net.SocketInputStream.read(java.base@11.0.2/SocketInputStream.java:140)
        at sun.nio.cs.StreamDecoder.readBytes(java.base@11.0.2/StreamDecoder.java:284)
        at sun.nio.cs.StreamDecoder.implRead(java.base@11.0.2/StreamDecoder.java:326)
        at sun.nio.cs.StreamDecoder.read(java.base@11.0.2/StreamDecoder.java:178)
        - locked <0x000000070fd0aaf8> (a java.io.InputStreamReader)
        at java.io.InputStreamReader.read(java.base@11.0.2/InputStreamReader.java:185)
        at java.io.BufferedReader.fill(java.base@11.0.2/BufferedReader.java:161)
        at java.io.BufferedReader.readLine(java.base@11.0.2/BufferedReader.java:326)
        - locked <0x000000070fd0aaf8> (a java.io.InputStreamReader)
        at java.io.BufferedReader.readLine(java.base@11.0.2/BufferedReader.java:392)
        at com.intellij.rt.execution.application.AppMainV2$1.run(AppMainV2.java:64)

"Service Thread" #12 daemon prio=9 os_prio=31 cpu=0.05ms elapsed=62.96s tid=0x00007f9a28835800 nid=0x5c03 runnable  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"Thread-0" #13 prio=5 os_prio=31 cpu=51991.33ms elapsed=62.96s tid=0x00007f9a2997f000 nid=0x5f03 runnable  [0x0000700004556000]
   java.lang.Thread.State: RUNNABLE
        at kr._19fstudy.effective_java.ch11.item78.RaceConditionExample.getSynchronizedSequence(RaceConditionExample.java:38)
        - locked <0x000000070feee758> (a java.lang.Class for kr._19fstudy.effective_java.ch11.item78.RaceConditionExample)
        at kr._19fstudy.effective_java.ch11.item78.RaceConditionExample.lambda$main$0(RaceConditionExample.java:17)
        at kr._19fstudy.effective_java.ch11.item78.RaceConditionExample$$Lambda$14/0x0000000800066840.run(Unknown Source)
        at java.lang.Thread.run(java.base@11.0.2/Thread.java:834)

"Thread-1" #14 prio=5 os_prio=31 cpu=53126.02ms elapsed=62.96s tid=0x00007f9a29980000 nid=0x6103 waiting for monitor entry  [0x0000700004659000]
   java.lang.Thread.State: BLOCKED (on object monitor)
        at kr._19fstudy.effective_java.ch11.item78.RaceConditionExample.getSynchronizedSequence(RaceConditionExample.java:38)
        - waiting to lock <0x000000070feee758> (a java.lang.Class for kr._19fstudy.effective_java.ch11.item78.RaceConditionExample)
        at kr._19fstudy.effective_java.ch11.item78.RaceConditionExample.lambda$main$1(RaceConditionExample.java:26)
        at kr._19fstudy.effective_java.ch11.item78.RaceConditionExample$$Lambda$15/0x0000000800066c40.run(Unknown Source)
        at java.lang.Thread.run(java.base@11.0.2/Thread.java:834)

"DestroyJavaVM" #15 prio=5 os_prio=31 cpu=176.71ms elapsed=62.96s tid=0x00007f9a2b801800 nid=0x2403 waiting on condition  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"Attach Listener" #16 daemon prio=9 os_prio=31 cpu=1.33ms elapsed=49.34s tid=0x00007f9a2800f800 nid=0xa507 waiting on condition  [0x0000000000000000]
   java.lang.Thread.State: RUNNABLE

"VM Thread" os_prio=31 cpu=7.45ms elapsed=63.11s tid=0x00007f9a27809000 nid=0x4d03 runnable

"GC Thread#0" os_prio=31 cpu=2.17ms elapsed=63.13s tid=0x00007f9a2b003800 nid=0x2c03 runnable

"G1 Main Marker" os_prio=31 cpu=0.56ms elapsed=63.13s tid=0x00007f9a2b039800 nid=0x2e03 runnable

"G1 Conc#0" os_prio=31 cpu=0.03ms elapsed=63.13s tid=0x00007f9a29803800 nid=0x3203 runnable

"G1 Refine#0" os_prio=31 cpu=0.56ms elapsed=63.12s tid=0x00007f9a298a4800 nid=0x3403 runnable

"G1 Young RemSet Sampling" os_prio=31 cpu=4.63ms elapsed=63.12s tid=0x00007f9a298a5000 nid=0x3603 runnable
"VM Periodic Task Thread" os_prio=31 cpu=17.86ms elapsed=62.96s tid=0x00007f9a2a845800 nid=0x5d03 waiting on condition

JNI global refs: 19, weak refs: 0
